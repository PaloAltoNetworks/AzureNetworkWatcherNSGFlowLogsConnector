{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "xdrHost": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "PANW XDR only: http collector endpoint as showed in XDR UI"
            }
        },
        "xdrToken": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "PANW XDR only: http collector authentication token as showed in the UI"
            }
        },
        "disablePublicAccessToStorageAccount": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
              "description": "Disables public network access to the Storage Account (please note that even without enabling this option, access to the Storage Account is secured). As a consequence, communication with the Service Account will be performed through a private Virtual Network (VNet). Please note that due to this, the hosting pricing plan for the Function app server farm will need to be upgraded to 'Basic', as it is the minimum one providing VNet integration for Function apps (you can later upgrade this plan if you require more scaling options). Also note that the following extra resources will be created: a virtual network, a subnet, DNS zone names, virtual network links, private endpoints and a Storage Account file share."
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Region where all resources included in this template will be deployed. Leave this blank to use the same region as the one of the resource group."
            }
        },
        "targetStorageAccountName": {
            "type": "string",
            "metadata": {
                "description": "Name of the Azure Storage Account that you want to capture the log blobs from."
            },
            "minLength": 3,
            "maxLength": 24
        },
        "targetContainerName": {
            "type": "string",
            "defaultValue": "insights-logs-networksecuritygroupflowevent",
            "metadata": {
                "description": "Name of the container that contains the logs you want to forward. Use `insights-logs-networksecuritygroupflowevent` for Azure"
            },
            "minLength": 3,
            "maxLength": 63
        },
        "artifactUrl": {
            "type": "string",
            "defaultValue": "https://github.com/PaloAltoNetworks/AzureNetworkWatcherNSGFlowLogsConnector/files/13801755/Archive.zip",
            "metadata": {
                "description": "Function app artifact to deploy"
            },
            "minLength": 10,
            "maxLength": 255
        }
    },
    "variables": {
        "artifact": "[parameters('artifactUrl')]",
        "targetStorageAccountName": "[parameters('targetStorageAccountName')]",
        "targetStorageAccountId": "[resourceId('Microsoft.Storage/storageAccounts', variables('targetStorageAccountName'))]",

        "onePerResourceGroupAndStorageAccountAndContainer": "[uniqueString(resourceGroup().id, parameters('targetStorageAccountName'), parameters('targetContainerName'))]",
        "internalStorageAccountName": "[concat('panw', variables('onePerResourceGroupAndStorageAccountAndContainer'))]",

        "location": "[if(equals(parameters('location'), ''), resourceGroup().location, parameters('location'))]",
        "onePerResourceGroupUniqueSuffix": "[uniqueString(resourceGroup().id)]",

        "virtualNetworkName": "[format('panw{0}-virtual-network', variables('onePerResourceGroupUniqueSuffix'))]",
        "functionSubnetName": "[format('{0}-internal-functions-subnet', variables('virtualNetworkName'))]",
        "privateEndpointsSubnetName": "[format('{0}-private-endpoints-subnet', variables('virtualNetworkName'))]",
    
        "dnsSuffix": "[environment().suffixes.storage]",
        "privateStorageFileDnsZoneName": "[format('privatelink.file.{0}', variables('dnsSuffix'))]",
        "privateStorageBlobDnsZoneName": "[format('privatelink.blob.{0}', variables('dnsSuffix'))]",
        "privateStorageQueueDnsZoneName": "[format('privatelink.queue.{0}', variables('dnsSuffix'))]",
        "privateStorageTableDnsZoneName": "[format('privatelink.table.{0}', variables('dnsSuffix'))]",
    
        "privateStorageFileDnsZoneVirtualNetworkLinkName": "[format('{0}/{1}-link', variables('privateStorageFileDnsZoneName'), variables('virtualNetworkName'))]",
        "privateStorageBlobDnsZoneVirtualNetworkLinkName": "[format('{0}/{1}-link', variables('privateStorageBlobDnsZoneName'), variables('virtualNetworkName'))]",
        "privateStorageQueueDnsZoneVirtualNetworkLinkName": "[format('{0}/{1}-link', variables('privateStorageQueueDnsZoneName'), variables('virtualNetworkName'))]",
        "privateStorageTableDnsZoneVirtualNetworkLinkName": "[format('{0}/{1}-link', variables('privateStorageTableDnsZoneName'), variables('virtualNetworkName'))]",
    
        "privateEndpointStorageFileName": "[format('{0}-file-private-endpoint', variables('internalStorageAccountName'))]",
        "privateEndpointStorageTableName": "[format('{0}-table-private-endpoint', variables('internalStorageAccountName'))]",
        "privateEndpointStorageBlobName": "[format('{0}-blob-private-endpoint', variables('internalStorageAccountName'))]",
        "privateEndpointStorageQueueName": "[format('{0}-queue-private-endpoint', variables('internalStorageAccountName'))]",
    
        "privateEndpointPrivateDnsZoneGroupsStorageFileName": "[format('{0}/{1}', variables('privateEndpointStorageFileName'), 'filePrivateDnsZoneGroup')]",
        "privateEndpointPrivateDnsZoneGroupsStorageBlobName": "[format('{0}/{1}', variables('privateEndpointStorageBlobName'), 'blobPrivateDnsZoneGroup')]",
        "privateEndpointPrivateDnsZoneGroupsStorageTableName": "[format('{0}/{1}', variables('privateEndpointStorageTableName'), 'tablePrivateDnsZoneGroup')]",
        "privateEndpointPrivateDnsZoneGroupsStorageQueueName": "[format('{0}/{1}', variables('privateEndpointStorageQueueName'), 'queuePrivateDnsZoneGroup')]",
    
        "functionAppName": "[concat('panw-fl-', variables('onePerResourceGroupAndStorageAccountAndContainer'))]",

        "functionContentShareName": "[format('{0}-content-share', variables('functionAppName'))]",
        "functionNetworkConfigName": "[format('{0}/{1}', variables('functionAppName'), 'virtualNetwork')]",

        "storageAccountFileShareName": "[format('{0}/default/{1}', variables('internalStorageAccountName'), variables('functionContentShareName'))]",

        "servicePlan": "[concat('panw-sp-', variables('onePerResourceGroupUniqueSuffix'))]"
    },
    "resources": [
        {
            "condition": "[parameters('disablePublicAccessToStorageAccount')]",
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2022-09-01",
            "name": "[variables('virtualNetworkName')]",
            "location": "[variables('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.2.0.0/16"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('functionSubnetName')]",
                        "properties": {
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled",
                            "delegations": [
                            {
                                "name": "webapp",
                                "properties": {
                                "serviceName": "Microsoft.Web/serverFarms"
                                }
                            }
                            ],
                            "addressPrefix": "10.2.0.0/24"
                        }
                    },
                    {
                        "name": "[variables('privateEndpointsSubnetName')]",
                        "properties": {
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled",
                            "addressPrefix": "10.2.1.0/24"
                        }
                    }
                ]
            }
        },
        {
            "condition": "[parameters('disablePublicAccessToStorageAccount')]",
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "2020-06-01",
            "name": "[variables('privateStorageFileDnsZoneName')]",
            "location": "global",
            "properties": {}
        },
        {
            "condition": "[parameters('disablePublicAccessToStorageAccount')]",
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "2020-06-01",
            "name": "[variables('privateStorageBlobDnsZoneName')]",
            "location": "global",
            "properties": {}
        },
        {
            "condition": "[parameters('disablePublicAccessToStorageAccount')]",
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "2020-06-01",
            "name": "[variables('privateStorageQueueDnsZoneName')]",
            "location": "global",
            "properties": {}
        },
        {
            "condition": "[parameters('disablePublicAccessToStorageAccount')]",
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "2020-06-01",
            "name": "[variables('privateStorageTableDnsZoneName')]",
            "location": "global",
            "properties": {}
        },
        {
            "condition": "[parameters('disablePublicAccessToStorageAccount')]",
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "2020-06-01",
            "name": "[variables('privateStorageFileDnsZoneVirtualNetworkLinkName')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', variables('privateStorageFileDnsZoneName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
            ],
            "location": "global",
            "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
                }
            }
        },
        {
            "condition": "[parameters('disablePublicAccessToStorageAccount')]",
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "2020-06-01",
            "name": "[variables('privateStorageBlobDnsZoneVirtualNetworkLinkName')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', variables('privateStorageBlobDnsZoneName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
            ],
            "location": "global",
            "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
                }
            }
        },
        {
            "condition": "[parameters('disablePublicAccessToStorageAccount')]",
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "2020-06-01",
            "name": "[variables('privateStorageQueueDnsZoneVirtualNetworkLinkName')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', variables('privateStorageQueueDnsZoneName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
            ],
            "location": "global",
            "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
                }
            }
        },
        {
            "condition": "[parameters('disablePublicAccessToStorageAccount')]",
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "2020-06-01",
            "name": "[variables('privateStorageTableDnsZoneVirtualNetworkLinkName')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', variables('privateStorageTableDnsZoneName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
            ],
            "location": "global",
            "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
                }
            }
        },
        {
            "condition": "[parameters('disablePublicAccessToStorageAccount')]",
            "type": "Microsoft.Network/privateEndpoints",
            "apiVersion": "2022-09-01",
            "name": "[variables('privateEndpointStorageFileName')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('internalStorageAccountName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
            ],
            "location": "[variables('location')]",
            "properties": {
                "subnet": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('privateEndpointsSubnetName'))]"
                },
                "privateLinkServiceConnections": [
                    {
                        "name": "MyStorageFilePrivateLinkConnection",
                        "properties": {
                            "privateLinkServiceId": "[resourceId('Microsoft.Storage/storageAccounts', variables('internalStorageAccountName'))]",
                            "groupIds": [
                                "file"
                            ]
                        }
                    }
                ]
            }
        },
        {
            "condition": "[parameters('disablePublicAccessToStorageAccount')]",
            "type": "Microsoft.Network/privateEndpoints",
            "apiVersion": "2022-09-01",
            "name": "[variables('privateEndpointStorageBlobName')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('internalStorageAccountName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
            ],
            "location": "[variables('location')]",
            "properties": {
                "subnet": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('privateEndpointsSubnetName'))]"
                },
                "privateLinkServiceConnections": [
                    {
                        "name": "MyStorageBlobPrivateLinkConnection",
                        "properties": {
                            "privateLinkServiceId": "[resourceId('Microsoft.Storage/storageAccounts', variables('internalStorageAccountName'))]",
                            "groupIds": [
                                "blob"
                            ]
                        }
                    }
                ]
            }
        },
        {
            "condition": "[parameters('disablePublicAccessToStorageAccount')]",
            "type": "Microsoft.Network/privateEndpoints",
            "apiVersion": "2022-09-01",
            "name": "[variables('privateEndpointStorageTableName')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('internalStorageAccountName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
            ],
            "location": "[variables('location')]",
            "properties": {
                "subnet": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('privateEndpointsSubnetName'))]"
                },
                "privateLinkServiceConnections": [
                    {
                        "name": "MyStorageTablePrivateLinkConnection",
                        "properties": {
                            "privateLinkServiceId": "[resourceId('Microsoft.Storage/storageAccounts', variables('internalStorageAccountName'))]",
                            "groupIds": [
                                "table"
                            ]
                        }
                    }
                ]
            }
        },
        {
            "condition": "[parameters('disablePublicAccessToStorageAccount')]",
            "type": "Microsoft.Network/privateEndpoints",
            "apiVersion": "2022-09-01",
            "name": "[variables('privateEndpointStorageQueueName')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('internalStorageAccountName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
            ],
            "location": "[variables('location')]",
            "properties": {
                "subnet": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('privateEndpointsSubnetName'))]"
                },
                "privateLinkServiceConnections": [
                    {
                        "name": "MyStorageQueuePrivateLinkConnection",
                        "properties": {
                            "privateLinkServiceId": "[resourceId('Microsoft.Storage/storageAccounts', variables('internalStorageAccountName'))]",
                            "groupIds": [
                                "queue"
                            ]
                        }
                    }
                ]
            }
        },
        {
            "condition": "[parameters('disablePublicAccessToStorageAccount')]",
            "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
            "apiVersion": "2022-09-01",
            "name": "[variables('privateEndpointPrivateDnsZoneGroupsStorageFileName')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateEndpoints', variables('privateEndpointStorageFileName'))]",
                "[resourceId('Microsoft.Network/privateDnsZones', variables('privateStorageFileDnsZoneName'))]"
            ],
            "properties": {
                "privateDnsZoneConfigs": [
                    {
                        "name": "config",
                        "properties": {
                            "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', variables('privateStorageFileDnsZoneName'))]"
                        }
                    }
                ]
            }
        },
        {
            "condition": "[parameters('disablePublicAccessToStorageAccount')]",
            "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
            "apiVersion": "2022-09-01",
            "name": "[variables('privateEndpointPrivateDnsZoneGroupsStorageBlobName')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateEndpoints', variables('privateEndpointStorageBlobName'))]",
                "[resourceId('Microsoft.Network/privateDnsZones', variables('privateStorageBlobDnsZoneName'))]"
            ],
            "properties": {
                "privateDnsZoneConfigs": [
                    {
                        "name": "config",
                        "properties": {
                            "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', variables('privateStorageBlobDnsZoneName'))]"
                        }
                    }
                ]
            }
        },
        {
            "condition": "[parameters('disablePublicAccessToStorageAccount')]",
            "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
            "apiVersion": "2022-09-01",
            "name": "[variables('privateEndpointPrivateDnsZoneGroupsStorageTableName')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateEndpoints', variables('privateEndpointStorageTableName'))]",
                "[resourceId('Microsoft.Network/privateDnsZones', variables('privateStorageTableDnsZoneName'))]"
            ],
            "properties": {
                "privateDnsZoneConfigs": [
                    {
                        "name": "config",
                        "properties": {
                            "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', variables('privateStorageTableDnsZoneName'))]"
                        }
                    }
                ]
            }
        },
        {
            "condition": "[parameters('disablePublicAccessToStorageAccount')]",
            "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
            "apiVersion": "2022-09-01",
            "name": "[variables('privateEndpointPrivateDnsZoneGroupsStorageQueueName')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateEndpoints', variables('privateEndpointStorageQueueName'))]",
                "[resourceId('Microsoft.Network/privateDnsZones', variables('privateStorageQueueDnsZoneName'))]"
            ],
            "properties": {
                "privateDnsZoneConfigs": [
                    {
                        "name": "config",
                        "properties": {
                            "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', variables('privateStorageQueueDnsZoneName'))]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2021-04-01",
            "name": "[variables('internalStorageAccountName')]",
            "location": "[variables('location')]",
            "sku": {
                "name": "Standard_LRS"
            },
            "kind": "StorageV2",
            "properties": {
                "publicNetworkAccess": "[if(parameters('disablePublicAccessToStorageAccount'), 'Disabled', 'Enabled')]",
                "allowBlobPublicAccess": false,
                "networkAcls": "[if(parameters('disablePublicAccessToStorageAccount'), json('{\"bypass\": \"None\", \"defaultAction\": \"Deny\"}'), json('null'))]"
            }
        },
        {
            "condition": "[parameters('disablePublicAccessToStorageAccount')]",
            "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
            "apiVersion": "2022-05-01",
            "name": "[variables('storageAccountFileShareName')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('internalStorageAccountName'))]"
            ],
            "properties": {}
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2022-09-01",
            "kind": "[if(parameters('disablePublicAccessToStorageAccount'), 'app', 'functionapp')]",
            "location": "[variables('location')]",
            "name": "[variables('servicePlan')]",
            "sku": "[if(parameters('disablePublicAccessToStorageAccount'), json('{ \"name\":\"B1\", \"tier\": \"Basic\", \"capacity\": 1 }'), json('{ \"name\": \"Y1\", \"tier\": \"Dynamic\" }'))]",
            "properties": "[ if(parameters('disablePublicAccessToStorageAccount'), json('{ \"maximumElasticWorkerCount\": 1 }'), json(concat('{ \"name\": \"', variables('servicePlan'), '\", \"targetWorkerCount\": 1, \"targetWorkerSizeId\": 1, \"workerSize\": \"1\", \"numberOfWorkers\": 1, \"computeMode\": \"Dynamic\" }'))) ]"
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2020-12-01",
            "name": "[variables('functionAppName')]",
            "location": "[variables('location')]",
            "kind": "functionapp",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('internalStorageAccountName'))]",
                "[resourceId('Microsoft.Web/serverfarms', variables('servicePlan'))]",
                "[resourceId('Microsoft.Network/privateEndpoints/privateDnsZoneGroups', variables('privateEndpointStorageBlobName'), 'blobPrivateDnsZoneGroup')]",
                "[resourceId('Microsoft.Network/privateEndpoints/privateDnsZoneGroups', variables('privateEndpointStorageFileName'), 'filePrivateDnsZoneGroup')]",
                "[resourceId('Microsoft.Network/privateEndpoints/privateDnsZoneGroups', variables('privateEndpointStorageQueueName'), 'queuePrivateDnsZoneGroup')]",
                "[resourceId('Microsoft.Network/privateEndpoints/privateDnsZoneGroups', variables('privateEndpointStorageTableName'), 'tablePrivateDnsZoneGroup')]",
                "[resourceId('Microsoft.Network/privateDnsZones/virtualNetworkLinks', variables('privateStorageBlobDnsZoneName'), format('{0}-link', variables('virtualNetworkName')))]",
                "[resourceId('Microsoft.Network/privateDnsZones/virtualNetworkLinks', variables('privateStorageFileDnsZoneName'), format('{0}-link', variables('virtualNetworkName')))]",
                "[resourceId('Microsoft.Network/privateDnsZones/virtualNetworkLinks', variables('privateStorageQueueDnsZoneName'), format('{0}-link', variables('virtualNetworkName')))]",
                "[resourceId('Microsoft.Network/privateDnsZones/virtualNetworkLinks', variables('privateStorageTableDnsZoneName'), format('{0}-link', variables('virtualNetworkName')))]",
                "[resourceId('Microsoft.Storage/storageAccounts/fileServices/shares', variables('internalStorageAccountName'), 'default', variables('functionContentShareName'))]"
            ],
            "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('servicePlan'))]",
                "httpsOnly": true,
                "siteConfig": {
                    "httpsOnly": true,
                    "appSettings": [
                        {
                            "name": "FUNCTIONS_WORKER_RUNTIME",
                            "value": "dotnet-isolated"
                        },
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~4"
                        },
                        {
                            "name": "WEBSITE_RUN_FROM_PACKAGE",
                            "value": "[if(parameters('disablePublicAccessToStorageAccount'), variables('artifact'), '0')]"
                        },
                        {
                            "name": "WEBSITE_CONTENTOVERVNET",
                            "value": "[if(parameters('disablePublicAccessToStorageAccount'), '1', '0')]"
                        },
                        {
                            "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('internalStorageAccountName'),';AccountKey=',listkeys(resourceId('Microsoft.Storage/storageAccounts', variables('internalStorageAccountName')), '2021-04-01').keys[0].value,';EndpointSuffix=',environment().suffixes.storage)]"
                        },
                        {
                            "name": "WEBSITE_CONTENTSHARE",
                            "value": "[toLower(variables('functionContentShareName'))]"
                        },
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('internalStorageAccountName'),';AccountKey=',listkeys(resourceId('Microsoft.Storage/storageAccounts', variables('internalStorageAccountName')), '2021-04-01').keys[0].value,';EndpointSuffix=',environment().suffixes.storage)]"
                        },
                        {
                            "name": "LOGS_CONTAINER_NAME",
                            "value": "insights-logs-networksecuritygroupflowevent"
                        },
                        {
                            "name": "SOURCE_ACCOUNT_CONNECTION_STRING",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('targetStorageAccountName'), ';AccountKey=', listKeys(variables('targetStorageAccountId'),'2015-05-01-preview').key1)]"
                        },
                        {
                            "name": "XDR_HOST",
                            "value": "[parameters('xdrHost')]"
                        },
                        {
                            "name": "XDR_TOKEN",
                            "value": "[parameters('xdrToken')]"
                        },
                        {
                            "name": "LOG_INCOMING_JSON",
                            "value": "false"
                        }
                    ],
                    "publicNetworkAccess": "[if(parameters('disablePublicAccessToStorageAccount'), 'Disabled', 'Enabled')]",
                    "ftpsState": "Disabled",
                    "alwaysOn": "[parameters('disablePublicAccessToStorageAccount')]"
                }
            }
        },
        {
            "condition": "[not(parameters('disablePublicAccessToStorageAccount'))]",
            "type": "Microsoft.Web/sites/extensions",
            "name": "[format('{0}/ZipDeploy', variables('functionAppName'))]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]"
            ],
            "apiVersion": "2020-12-01",
            "properties": {
                "packageUri": "[variables('artifact')]"
            }
        },
        {
            "condition": "[parameters('disablePublicAccessToStorageAccount')]",
            "type": "Microsoft.Web/sites/networkConfig",
            "apiVersion": "2022-09-01",
            "name": "[variables('functionNetworkConfigName')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
            ],
            "properties": {
                "subnetResourceId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('functionSubnetName'))]",
                "swiftSupported": true
            }
        }
    ]
}
